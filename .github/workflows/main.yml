name: FT-PT workflow
on:
 workflow_dispatch: # Manually trigger the workflow
 
permissions:
 id-token: write  # Required for OIDC
 contents: read   # Allows reading repo contents

jobs:
 scale-ecs:
   runs-on: ubuntu-latest
   outputs:
     matrix_count: ${{ steps.set-matrix-count.outputs.count }}  # Pass matrix count
     matrix_values: ${{ steps.set-matrix-values.outputs.matrix }}  # Pass matrix values as a string
   steps:
   - name: Set up Python
     uses: actions/setup-python@v4
     with:
       python-version: '3.x'
   - name: Install Boto3
     run: |     
       pip install boto3
   - name: Checkout code to download scripts
     uses: actions/checkout@v2
     
   - name: Github to AWS connection using OIDC
     id: aws-sts
     uses: aws-actions/configure-aws-credentials@v3
     with:
       role-to-assume: arn:aws:iam::739275441922:role/Sourabh-OpenID
       aws-region: 'us-east-1'  # Specify your AWS region
       
  # count input parameter from matrix.yaml file to scale up the runner.  
   - name: Read Matrix Values from YAML
     id: set-matrix-values
     run: |
        matrix_values=$(yq eval '.scripts' matrix.yaml.yaml | jq -c '.')
        echo "Matrix values: $matrix_values"
        echo "::set-output name=matrix::$matrix_values"

   - name: Count Matrix Values
     id: set-matrix-count
     run: |
        matrix_count=$(yq eval '.scripts | length' matrix.yaml)
        echo "Count: $matrix_count"
        echo "::set-output name=count::$matrix_count"
# Check If Any service is running in ECS cluster , if yes job will fail else it will execute
   # - name: Run ECS Check
   #   run: |
   #     pwd
   #     ls -la
   #     python check_ecs.py --cluster_name TRFunctionalAPI
# Scale the Service with count 
   - name: Run ECS Service Scaling
     run: |
      DESIRED_COUNT=${{ steps.set-matrix-count.outputs.count }}
      python scale_ecs_service.py --cluster_name TRFunctionalAPI --service_name nginx-datadog --desired_count $DESIRED_COUNT\

 run-scripts:
   needs: scale-ecs  # Run after the scale-ecs job
   runs-on: ubuntu-latest
   strategy:
     matrix:
       script: ${{ fromJson(needs.scale-ecs.outputs.matrix_values) }}  # Use matrix values from the previous job
   steps:
    - name: Run Script
      run: |
        echo "Running ${{ matrix.script }}"
     
